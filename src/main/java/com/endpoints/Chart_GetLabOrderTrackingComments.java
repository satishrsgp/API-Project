package com.endpoints;

import java.util.ArrayList;
import java.util.HashMap;

import org.testng.asserts.SoftAssert;

import com.testscripts.BaseTest;
import com.utils.DatabaseConnection;
import com.utils.FinalAssertions;
import com.utils.JsonListArray;
import com.utils.Log;

public class Chart_GetLabOrderTrackingComments
{
	public static Boolean Chart_GetLabOrderTrackingComments_Test(HashMap<String, String> parameters, String strResponse, String strUniqueJsonToken, SoftAssert softAssert)
	{
		Boolean status=false;

		if(!strResponse.isEmpty() && !strResponse.contains("is not valid for Guid"))
		{
			try
			{
				String strQuery = "SELECT UPPER(CAST(los.signoff_id AS CHAR(36))) AS id,UPPER(CAST(los.order_id AS CHAR(36))) AS orderId,UPPER(CAST(ln.person_id AS CHAR(36))) AS personId, "
						+"UPPER(CAST(los.provider_id AS CHAR(36))) AS providerId,los.author_name AS authorName, "
						+"case when los.delegate_ind='Y' then pm.description+' ('+um.last_name+', '+um.first_name+')' else pm.description end as authorDisplayName,um.last_name+', '+um.first_name as userName, "
						+"case when los.delegate_ind='Y' then 'true' else 'false' end AS isDelegate,los.create_timestamp AS createTimestamp,los.create_timestamp_tz AS createTimestampTimezone, "
						+"los.signoff_comment AS comment,los.tracking_type AS type,los.generated_by AS generatedBy,case when los.auto_generated='Y' then 'true' else 'false' end AS isAutoGenerated "
						+"FROM   lab_order_signoff AS los INNER JOIN user_mstr AS um ON los.created_by = um.user_id "
						+"INNER JOIN lab_nor AS ln ON los.order_id = ln.order_num "
						+"INNER JOIN provider_mstr pm ON pm.provider_id=los.provider_id "
						+"WHERE (ln.enterprise_id = '"+System.getProperty("LoggedInEnterpriseId")+"') AND (ln.person_id = '"+parameters.get("personId")+"') AND (los.order_id = '"+parameters.get("orderId")+"') order by los.create_timestamp desc";

				String[] jsonMetaData = {"id","orderId","personId","providerId","authorName","authorDisplayName","userName","isDelegate","createTimestamp","createTimestampTimezone","comment","type","generatedBy","isAutoGenerated"};

				try
				{	
					ArrayList<Object> jsonList = JsonListArray.computeJsonList(jsonMetaData, strResponse, strUniqueJsonToken);
					Log.info("JSON LIST is :\n" + jsonList);
					status = FinalAssertions.assertResponseCount(DatabaseConnection.statementExecution(BaseTest.connNGA, strQuery), strResponse, "$..id", jsonList);
				} 
				catch (Exception e)
				{
					e.printStackTrace();
					Log.info("Error in Test Class and the detail are : \n" + e.getMessage());
					softAssert.fail("Error in Test Script please look at logs");
				}
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}
		else
		{
			status = true;
		}

		return status;
	}
}